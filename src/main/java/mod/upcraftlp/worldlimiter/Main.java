package mod.upcraftlp.worldlimiter;

import com.google.common.collect.Lists;
import net.minecraft.util.text.TextFormatting;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.event.FMLFingerprintViolationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLServerStartedEvent;
import net.minecraftforge.fml.relauncher.Side;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import static mod.upcraftlp.worldlimiter.Reference.*;

@Mod(
		name = MODNAME,
		version = VERSION,
		acceptedMinecraftVersions = MCVERSION,
		modid = MODID,
		acceptableRemoteVersions = "*",
		updateJSON = INTERNAL_UPDATE_URL,
		certificateFingerprint = FORGE_FINGERPRINT
)
public class Main {

	private static final Logger log = LogManager.getFormatterLogger(MODID);

	@Mod.Instance()
	public static Main INSTANCE;

	public static Logger getLogger() {
		return log;
	}

	@Mod.EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		if (event.getSide() == Side.CLIENT) {
			ModMetadata data = event.getModMetadata();
			data.autogenerated = false;
			data.version = VERSION;
			data.modId = MODID;
			data.authorList = Lists.newArrayList(AUTHOR);
			data.name = TextFormatting.AQUA + MODNAME;
		}
	}

	@Mod.EventHandler
	public void onFingerprintViolation(FMLFingerprintViolationEvent event) {
		log.warn(event.getSource() + " has a mismatching fingerprint key!");
		if(event.isDirectory()) {
			log.warn(event.getSource() + " is a directory!");
		}
		else {
			log.warn("Expected: " + event.getExpectedFingerprint());
			StringBuilder res = new StringBuilder("Got " + event.getFingerprints().size() + " known keys: ");
			for (String fingerPrint : event.getFingerprints()) res.append("\n   - ").append(fingerPrint);
			log.warn(res.toString());
		}
	}

	@Mod.EventHandler
	public void serverStarting(FMLServerStartedEvent event) {
		ModChecker.notifyServer();
	}
}
